domain inventory_control_mdp {
	
	requirements = { 
		//constrained-state,
		reward-deterministic
	};
	
	types {
  		shop : object;
	}; 
	
	pvariables { 
	
		ARRIVE-PARAM(shop) : { non-fluent, real, default = 0.0 }; 		  		
		STORE-PENALTY(shop) : { non-fluent, real, default = 0.0 };

		empty(shop) : { state-fluent, bool, default = false };
		
		person(shop) : { state-fluent, bool, default = false };
		
		fill(shop) : { action-fluent, bool, default = false };		

	};
  
	cpfs {
		
		empty'(?s) =
			if( fill(?s) ) 
			then KronDelta(false) 
			else if( empty(?s) )
			then KronDelta(true)
			else if( person(?s) )
			then KronDelta(true)
			else KronDelta(empty(?s));
			
		person'(?s) =
			if( ~person(?s) )
			then Bernoulli(ARRIVE-PARAM(?s))
			else if( empty(?s) )
			then KronDelta(person(?s))
			else KronDelta(false);
			
	};
  
  	// Reward is a sum of waiting penalties for those in elevators and at floor
	reward = 
		[sum_{?s: shop} [ -person(?s)*empty(?s) -STORE-PENALTY(?s)*fill(?s) ]];

}